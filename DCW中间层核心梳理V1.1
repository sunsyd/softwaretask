一、中间层模块核心功能描述
功能定位：
中间层作为“前端”与“后端”之间的桥梁，负责管理表达式请求的传输、用户区分、唯一标识添加、异步响应接收与结果分发。

 二、系统结构流程

          前端输入表达式（expression）
                    ↓
    中间层接收请求 → 为请求生成唯一 ID
                    ↓
     转发请求到后端（携带 expression + ID）
                    ↓
        后端解析 expression 并计算结果
                    ↓
    中间层根据返回 ID 找到对应请求用户
                    ↓
       返回计算结果给对应前端用户
       
 三、主要功能模块说明
1. 接收前端请求并解析表达式数据
从前端接收包含 expression 和 unit 的 JSON 请求。

自动为每个请求生成唯一 ID（如使用 UUID 或自增编号）。

2. 构建消息请求队列
使用队列或字典结构缓存待处理的表达式请求（按 ID 区分）。

为多用户并发提供基础支持。

3. 请求转发与结果匹配
将包含 expression、unit、ID 的完整数据 POST 给后端计算服务。

接收后端计算结果，按返回的 ID 找到原始请求，打包结果发回前端。

四、预期输入输出结构
-----------------------------------------------------
输入（来自前端）：
{
  "expression": "8*8*(8)^3",
  "unit": "deg"
}
-----------------------------------------------------
中间层构造的请求（发送至后端）：
{
  "expression": "8*8*(8)^3",
  "unit": "deg",
  "ID": "1346454"
}
-----------------------------------------------------
后端返回结果（含 ID）：
{
  "result": "32768",
  "unit": "deg",
  "ID": "1346454"
}
-----------------------------------------------------
中间层最终响应前端：
{
  "result": "32768",
  "unit": "deg"
}
-----------------------------------------------------
